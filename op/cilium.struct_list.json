{"struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct lpm_v4_key);\n    __type (value, struct lpm_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CIDR4_HMAP_ELEMS);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CIDR4_HMAP_NAME  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_xdp.c.out:46:54,", "struct {\n    __uint (type, BPF_MAP_TYPE_LPM_TRIE);\n    __type (key, struct lpm_v4_key);\n    __type (value, struct lpm_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CIDR4_LMAP_ELEMS);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CIDR4_LMAP_NAME  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_xdp.c.out:60:68,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct lpm_v6_key);\n    __type (value, struct lpm_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CIDR4_HMAP_ELEMS);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CIDR6_HMAP_NAME  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_xdp.c.out:78:86,", "struct {\n    __uint (type, BPF_MAP_TYPE_LPM_TRIE);\n    __type (key, struct lpm_v6_key);\n    __type (value, struct lpm_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CIDR4_LMAP_ELEMS);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CIDR6_LMAP_NAME  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_xdp.c.out:92:100,", "struct ct_buffer6 {\n    struct ipv6_ct_tuple tuple;\n    struct ct_state ct_state;\n    __u32 monitor;\n    int ret;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_lxc.c.out:197:202,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_ARRAY);\n    __type (key, __u32);\n    __type (value, struct ct_buffer6);\n    __uint (max_entries, 1);\n} CT_TAIL_CALL_BUFFER6  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_lxc.c.out:207:213,", "struct ct_buffer4 {\n    struct ipv4_ct_tuple tuple;\n    struct ct_state ct_state;\n    __u32 monitor;\n    int ret;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_lxc.c.out:615:620,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_ARRAY);\n    __type (key, __u32);\n    __type (value, struct ct_buffer4);\n    __uint (max_entries, 1);\n} CT_TAIL_CALL_BUFFER4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_lxc.c.out:625:631,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, struct ipv4_revnat_tuple);\n    __type (value, struct ipv4_revnat_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, LB4_REVERSE_NAT_SK_MAP_SIZE);\n} LB4_REVERSE_NAT_SK_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_sock.c.out:149:156,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, struct ipv6_revnat_tuple);\n    __type (value, struct ipv6_revnat_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, LB6_REVERSE_NAT_SK_MAP_SIZE);\n} LB6_REVERSE_NAT_SK_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_bpf_sock.c.out:513:520,", "struct cpu_jiffies {\n    uint64_t *jiffies;\n    uint32_t cpus;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_cilium-probe-kernel-hz.c.out:28:31,", "struct sock_key {\n    union {\n        struct {\n            __u32 sip4;\n            __u32 pad1;\n            __u32 pad2;\n            __u32 pad3;\n        }\n        ;\n        union v6addr sip6;\n    }\n    ;\n    union {\n        struct {\n            __u32 dip4;\n            __u32 pad4;\n            __u32 pad5;\n            __u32 pad6;\n        }\n        ;\n        union v6addr dip6;\n    }\n    ;\n    __u8 family;\n    __u8 pad7;\n    __u16 pad8;\n    __u32 sport;\n    __u32 dport;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_sockops_bpf_sockops.h.out:4:32,", "struct {\n    __uint (type, BPF_MAP_TYPE_SOCKHASH);\n    __type (key, struct sock_key);\n    __type (value, int);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, SOCKOPS_MAP_SIZE);\n} SOCK_OPS_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_sockops_bpf_sockops.h.out:37:44,", "struct pcap_timeval {\n    __u32 tv_sec;\n    __u32 tv_usec;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:18:21,", "struct pcap_timeoff {\n    __u64 tv_boot;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:26:28,", "struct pcap_pkthdr {\n    union {\n        struct pcap_timeval ts;\n        struct pcap_timeoff to;\n    }\n    ;\n    __u32 caplen;\n    __u32 len;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:33:41,", "struct capture_msg {\n    NOTIFY_COMMON_HDR struct pcap_pkthdr hdr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:46:48,", "struct capture_cache {\n    bool rule_seen;\n    __u16 rule_id;\n    __u16 cap_len;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:86:90,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_ARRAY);\n    __type (key, __u32);\n    __type (value, struct capture_cache);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, 1);\n} cilium_capture_cache  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:95:102,", "struct capture_rule {\n    __u16 rule_id;\n    __u16 reserved;\n    __u32 cap_len;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:106:110,", "struct capture4_wcard {\n    __be32 saddr;\n    __be32 daddr;\n    __be16 sport;\n    __be16 dport;\n    __u8 nexthdr;\n    __u8 smask;\n    __u8 dmask;\n    __u8 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:115:124,", "struct capture6_wcard {\n    union v6addr saddr;\n    union v6addr daddr;\n    __be16 sport;\n    __be16 dport;\n    __u8 nexthdr;\n    __u8 smask;\n    __u8 dmask;\n    __u8 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:129:138,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct capture4_wcard);\n    __type (value, struct capture_rule);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CAPTURE4_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CAPTURE4_RULES  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:145:153,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct capture6_wcard);\n    __type (value, struct capture_rule);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CAPTURE6_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} CAPTURE6_RULES  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_pcap.h.out:244:252,", "struct {\n    __uint (type, CT_MAP_TYPE);\n    __type (key, struct ipv6_ct_tuple);\n    __type (value, struct ct_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CT_MAP_SIZE_TCP);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} CT_MAP_TCP6  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_conntrack_map.h.out:24:36,", "struct {\n    __uint (type, CT_MAP_TYPE);\n    __type (key, struct ipv6_ct_tuple);\n    __type (value, struct ct_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CT_MAP_SIZE_ANY);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} CT_MAP_ANY6  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_conntrack_map.h.out:40:52,", "struct {\n    __uint (type, CT_MAP_TYPE);\n    __type (key, struct ipv4_ct_tuple);\n    __type (value, struct ct_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CT_MAP_SIZE_TCP);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} CT_MAP_TCP4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_conntrack_map.h.out:67:79,", "struct {\n    __uint (type, CT_MAP_TYPE);\n    __type (key, struct ipv4_ct_tuple);\n    __type (value, struct ct_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CT_MAP_SIZE_ANY);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} CT_MAP_ANY4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_conntrack_map.h.out:83:95,", "struct trace_ctx {\n    enum trace_reason reason;\n    __u32 monitor;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_trace.h.out:64:67,", "struct trace_notify {\n    NOTIFY_CAPTURE_HDR __u32 src_label;\n    __u32 dst_label;\n    __u16 dst_id;\n    __u8 reason;\n    __u8 ipv6 : 1;\n    __u8 pad : 7;\n    __u32 ifindex;\n    union {\n        struct {\n            __be32 orig_ip4;\n            __u32 orig_pad1;\n            __u32 orig_pad2;\n            __u32 orig_pad3;\n        }\n        ;\n        union v6addr orig_ip6;\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_trace.h.out:74:93,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERF_EVENT_ARRAY);\n    __uint (key_size, sizeof (__u32));\n    __uint (value_size, sizeof (__u32));\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, __NR_CPUS__);\n} SIGNAL_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_signal.h.out:8:15,", "struct signal_msg {\n    __u32 signal_nr;\n    union {\n        struct {\n            __u32 proto;\n        }\n        ;\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_signal.h.out:23:32,", "union tcp_flags {\n    struct {\n        __u8 upper_bits;\n        __u8 lower_bits;\n        __u16 pad;\n    }\n    ;\n    __u32 value;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_conntrack.h.out:34:42,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct endpoint_key);\n    __type (value, struct endpoint_info);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, ENDPOINTS_MAP_SIZE);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} ENDPOINTS_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:14:22,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_HASH);\n    __type (key, struct metrics_key);\n    __type (value, struct metrics_value);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, METRICS_MAP_SIZE);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} METRICS_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:26:34,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct edt_id);\n    __type (value, struct edt_info);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, THROTTLE_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} THROTTLE_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:64:72,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH_OF_MAPS);\n    __type (key, struct endpoint_key);\n    __type (value, int);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, ENDPOINTS_MAP_SIZE);\n} EP_POLICY_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:80:87,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct policy_key);\n    __type (value, struct policy_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, POLICY_MAP_SIZE);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} POLICY_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:95:103,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct endpoint_key);\n    __type (value, struct endpoint_key);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, TUNNEL_ENDPOINT_MAP_SIZE);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} TUNNEL_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:123:131,", "struct ipcache_key {\n    struct bpf_lpm_trie_key lpm_key;\n    __u16 pad1;\n    __u8 pad2;\n    __u8 family;\n    union {\n        struct {\n            __u32 ip4;\n            __u32 pad4;\n            __u32 pad5;\n            __u32 pad6;\n        }\n        ;\n        union v6addr ip6;\n    }\n    ;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:192:208,", "struct {\n    __uint (type, LPM_MAP_TYPE);\n    __type (key, struct ipcache_key);\n    __type (value, struct remote_endpoint_info);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, IPCACHE_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} IPCACHE_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:213:221,", "struct {\n    __uint (type, BPF_MAP_TYPE_ARRAY);\n    __type (key, __u32);\n    __type (value, struct encrypt_config);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, 1);\n} ENCRYPT_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:225:232,", "struct {\n    __uint (type, LPM_MAP_TYPE);\n    __type (key, struct egress_gw_policy_key);\n    __type (value, struct egress_gw_policy_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, EGRESS_POLICY_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} EGRESS_POLICY_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:238:246,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, union v6addr);\n    __type (value, __u32);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, SRV6_SID_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} SRV6_SID_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:293:301,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct vtep_key);\n    __type (value, struct vtep_value);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, VTEP_MAP_SIZE);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} VTEP_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_maps.h.out:309:317,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, __be32);\n    __type (value, union macaddr);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, NODEPORT_NEIGH4_SIZE);\n} NODEPORT_NEIGH4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nodeport.h.out:67:74,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, union v6addr);\n    __type (value, union macaddr);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, NODEPORT_NEIGH6_SIZE);\n} NODEPORT_NEIGH6  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nodeport.h.out:82:89,", "struct dsr_opt_v6 {\n    __u8 nexthdr;\n    __u8 len;\n    __u8 opt_type;\n    __u8 opt_len;\n    union v6addr addr;\n    __be16 port;\n    __u16 pad;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nodeport.h.out:93:101,", "struct ipv4_frag_id {\n    __be32 daddr;\n    __be32 saddr;\n    __be16 id;\n    __u8 proto;\n    __u8 pad;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_ipv4.h.out:12:18,", "struct ipv4_frag_l4ports {\n    __be16 sport;\n    __be16 dport;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_ipv4.h.out:23:26,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, struct ipv4_frag_id);\n    __type (value, struct ipv4_frag_l4ports);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_IPV4_FRAG_MAP_MAX_ENTRIES);\n} IPV4_FRAG_DATAGRAMS_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_ipv4.h.out:33:40,", "union v6addr {\n    struct {\n        __u32 p1;\n        __u32 p2;\n        __u32 p3;\n        __u32 p4;\n    }\n    ;\n    struct {\n        __u64 d1;\n        __u64 d2;\n    }\n    ;\n    __u8 addr [16];\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:163:177,", "struct endpoint_key {\n    union {\n        struct {\n            __u32 ip4;\n            __u32 pad1;\n            __u32 pad2;\n            __u32 pad3;\n        }\n        ;\n        union v6addr ip6;\n    }\n    ;\n    __u8 family;\n    __u8 key;\n    __u16 pad5;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:246:261,", "struct endpoint_info {\n    __u32 ifindex;\n    __u16 unused;\n    __u16 lxc_id;\n    __u32 flags;\n    mac_t mac;\n    mac_t node_mac;\n    __u32 pad [4];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:268:276,", "struct edt_id {\n    __u64 id;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:281:283,", "struct edt_info {\n    __u64 bps;\n    __u64 t_last;\n    __u64 t_horizon_drop;\n    __u64 pad [4];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:288:293,", "struct remote_endpoint_info {\n    __u32 sec_label;\n    __u32 tunnel_endpoint;\n    __u8 key;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:298:302,", "struct policy_key {\n    __u32 sec_label;\n    __u16 dport;\n    __u8 protocol;\n    __u8 egress : 1, pad : 7;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:307:312,", "struct policy_entry {\n    __be16 proxy_port;\n    __u8 deny : 1, pad : 7;\n    __u8 pad0;\n    __u16 pad1;\n    __u16 pad2;\n    __u64 packets;\n    __u64 bytes;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:317:325,", "struct metrics_key {\n    __u8 reason;\n    __u8 dir : 2, pad : 6;\n    __u16 reserved [3];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:330:334,", "struct metrics_value {\n    __u64 count;\n    __u64 bytes;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:339:342,", "struct egress_gw_policy_key {\n    struct bpf_lpm_trie_key lpm_key;\n    __u32 saddr;\n    __u32 daddr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:347:351,", "struct egress_gw_policy_entry {\n    __u32 egress_ip;\n    __u32 gateway_ip;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:356:359,", "struct srv6_vrf_key4 {\n    struct bpf_lpm_trie_key lpm;\n    __u32 src_ip;\n    __u32 dst_cidr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:364:368,", "struct srv6_vrf_key6 {\n    struct bpf_lpm_trie_key lpm;\n    union v6addr src_ip;\n    union v6addr dst_cidr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:373:377,", "struct srv6_policy_key4 {\n    struct bpf_lpm_trie_key lpm;\n    __u32 vrf_id;\n    __u32 dst_cidr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:382:386,", "struct srv6_policy_key6 {\n    struct bpf_lpm_trie_key lpm;\n    __u32 vrf_id;\n    union v6addr dst_cidr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:391:395,", "struct srv6_ipv4_2tuple {\n    __u32 src;\n    __u32 dst;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:400:403,", "struct srv6_ipv6_2tuple {\n    union v6addr src;\n    union v6addr dst;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:408:411,", "struct vtep_key {\n    __u32 vtep_ip;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:416:418,", "struct vtep_value {\n    __u64 vtep_mac;\n    __u32 tunnel_endpoint;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:423:426,", "struct encrypt_config {\n    __u8 encrypt_key;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:673:675,", "struct ipv6_ct_tuple {\n    union v6addr daddr;\n    union v6addr saddr;\n    __be16 dport;\n    __be16 sport;\n    __u8 nexthdr;\n    __u8 flags;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:780:787,", "struct ipv4_ct_tuple {\n    __be32 daddr;\n    __be32 saddr;\n    __be16 dport;\n    __be16 sport;\n    __u8 nexthdr;\n    __u8 flags;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:792:799,", "struct ct_entry {\n    __u64 rx_packets;\n    union {\n        __u64 rx_bytes;\n        __u64 backend_id;\n    }\n    ;\n    __u64 tx_packets;\n    __u64 tx_bytes;\n    __u32 lifetime;\n    __u16 rx_closing : 1, tx_closing : 1, nat46 : 1, lb_loopback : 1, seen_non_syn : 1, node_port : 1, proxy_redirect : 1, dsr : 1, from_l7lb : 1, reserved : 7;\n    __u16 rev_nat_index;\n    __u16 ifindex;\n    __u8 tx_flags_seen;\n    __u8 rx_flags_seen;\n    __u32 src_sec_id;\n    __u32 last_tx_report;\n    __u32 last_rx_report;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:804:822,", "struct lb6_key {\n    union v6addr address;\n    __be16 dport;\n    __u16 backend_slot;\n    __u8 proto;\n    __u8 scope;\n    __u8 pad [2];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:827:834,", "struct lb6_service {\n    union {\n        __u32 backend_id;\n        __u32 affinity_timeout;\n        __u32 l7_lb_proxy_port;\n    }\n    ;\n    __u16 count;\n    __u16 rev_nat_index;\n    __u8 flags;\n    __u8 flags2;\n    __u8 pad [2];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:839:851,", "struct lb6_backend {\n    union v6addr address;\n    __be16 port;\n    __u8 proto;\n    __u8 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:856:861,", "struct lb6_health {\n    struct lb6_backend peer;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:866:868,", "struct lb6_reverse_nat {\n    union v6addr address;\n    __be16 port;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:873:876,", "struct ipv6_revnat_tuple {\n    __sock_cookie cookie;\n    union v6addr address;\n    __be16 port;\n    __u16 pad;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:881:886,", "struct ipv6_revnat_entry {\n    union v6addr address;\n    __be16 port;\n    __u16 rev_nat_index;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:891:895,", "struct lb4_key {\n    __be32 address;\n    __be16 dport;\n    __u16 backend_slot;\n    __u8 proto;\n    __u8 scope;\n    __u8 pad [2];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:900:907,", "struct lb4_service {\n    union {\n        __u32 backend_id;\n        __u32 affinity_timeout;\n        __u32 l7_lb_proxy_port;\n    }\n    ;\n    __u16 count;\n    __u16 rev_nat_index;\n    __u8 flags;\n    __u8 flags2;\n    __u8 pad [2];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:912:924,", "struct lb4_backend {\n    __be32 address;\n    __be16 port;\n    __u8 proto;\n    __u8 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:929:934,", "struct lb4_health {\n    struct lb4_backend peer;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:939:941,", "struct lb4_reverse_nat {\n    __be32 address;\n    __be16 port;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:946:949,", "struct ipv4_revnat_tuple {\n    __sock_cookie cookie;\n    __be32 address;\n    __be16 port;\n    __u16 pad;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:954:959,", "struct ipv4_revnat_entry {\n    __be32 address;\n    __be16 port;\n    __u16 rev_nat_index;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:964:968,", "union lb4_affinity_client_id {\n    __u32 client_ip;\n    __net_cookie client_cookie;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:973:976,", "struct lb4_affinity_key {\n    union lb4_affinity_client_id client_id;\n    __u16 rev_nat_id;\n    __u8 netns_cookie : 1, reserved : 7;\n    __u8 pad1;\n    __u32 pad2;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:981:987,", "union lb6_affinity_client_id {\n    union v6addr client_ip;\n    __net_cookie client_cookie;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:992:995,", "struct lb6_affinity_key {\n    union lb6_affinity_client_id client_id;\n    __u16 rev_nat_id;\n    __u8 netns_cookie : 1, reserved : 7;\n    __u8 pad1;\n    __u32 pad2;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1000:1006,", "struct lb_affinity_val {\n    __u64 last_used;\n    __u32 backend_id;\n    __u32 pad;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1011:1015,", "struct lb_affinity_match {\n    __u32 backend_id;\n    __u16 rev_nat_id;\n    __u16 pad;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1020:1024,", "struct ct_state {\n    __u16 rev_nat_index;\n    __u16 loopback : 1, node_port : 1, dsr : 1, syn : 1, proxy_redirect : 1, from_l7lb : 1, reserved : 10;\n    __be32 addr;\n    __be32 svc_addr;\n    __u32 src_sec_id;\n    __u16 ifindex;\n    __u32 backend_id;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1029:1037,", "struct lb4_src_range_key {\n    struct bpf_lpm_trie_key lpm_key;\n    __u16 rev_nat_id;\n    __u16 pad;\n    __u32 addr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1057:1062,", "struct lb6_src_range_key {\n    struct bpf_lpm_trie_key lpm_key;\n    __u16 rev_nat_id;\n    __u16 pad;\n    union v6addr addr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1067:1072,", "struct lpm_v4_key {\n    struct bpf_lpm_trie_key lpm;\n    __u8 addr [4];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1099:1102,", "struct lpm_v6_key {\n    struct bpf_lpm_trie_key lpm;\n    __u8 addr [16];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1107:1110,", "struct lpm_val {\n    __u8 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_common.h.out:1115:1117,", "struct drop_notify {\n    NOTIFY_CAPTURE_HDR __u32 src_label;\n    __u32 dst_label;\n    __u32 dst_id;\n    __u16 line;\n    __u8 file;\n    __s8 ext_error;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_drop.h.out:18:25,", "struct debug_msg {\n    NOTIFY_COMMON_HDR __u32 arg1;\n    __u32 arg2;\n    __u32 arg3;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_dbg.h.out:33:37,", "struct debug_capture_msg {\n    NOTIFY_CAPTURE_HDR __u32 arg1;\n    __u32 arg2;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_dbg.h.out:61:64,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, __u16);\n    __type (value, struct lb6_reverse_nat);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_REV_NAT_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB6_REVERSE_NAT_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:20:28,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct lb6_key);\n    __type (value, struct lb6_service);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_SERVICE_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB6_SERVICES_MAP_V2  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:32:40,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, __u32);\n    __type (value, struct lb6_backend);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_BACKENDS_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB6_BACKEND_MAP_V2  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:44:52,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, struct lb6_affinity_key);\n    __type (value, struct lb_affinity_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_AFFINITY_MAP_MAX_ENTRIES);\n} LB6_AFFINITY_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:58:65,", "struct {\n    __uint (type, BPF_MAP_TYPE_LPM_TRIE);\n    __type (key, struct lb6_src_range_key);\n    __type (value, __u8);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, LB6_SRC_RANGE_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} LB6_SRC_RANGE_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:73:81,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, __sock_cookie);\n    __type (value, struct lb6_health);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_BACKENDS_MAP_MAX_ENTRIES);\n} LB6_HEALTH_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:89:96,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH_OF_MAPS);\n    __type (key, __u16);\n    __type (value, __u32);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_MAGLEV_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n    __array (values, struct {__uint (type, BPF_MAP_TYPE_ARRAY); __uint (key_size, sizeof (__u32)); __uint (value_size, sizeof (__u32) * LB_MAGLEV_LUT_SIZE); __uint (max_entries, 1);});\n} LB6_MAGLEV_MAP_OUTER  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:104:113,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, __u16);\n    __type (value, struct lb4_reverse_nat);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_REV_NAT_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB4_REVERSE_NAT_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:123:131,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct lb4_key);\n    __type (value, struct lb4_service);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_SERVICE_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB4_SERVICES_MAP_V2  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:135:143,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, __u32);\n    __type (value, struct lb4_backend);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_BACKENDS_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB4_BACKEND_MAP_V2  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:147:155,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, struct lb4_affinity_key);\n    __type (value, struct lb_affinity_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_AFFINITY_MAP_MAX_ENTRIES);\n} LB4_AFFINITY_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:161:168,", "struct {\n    __uint (type, BPF_MAP_TYPE_LPM_TRIE);\n    __type (key, struct lb4_src_range_key);\n    __type (value, __u8);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, LB4_SRC_RANGE_MAP_SIZE);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} LB4_SRC_RANGE_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:176:184,", "struct {\n    __uint (type, BPF_MAP_TYPE_LRU_HASH);\n    __type (key, __sock_cookie);\n    __type (value, struct lb4_health);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_BACKENDS_MAP_MAX_ENTRIES);\n} LB4_HEALTH_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:192:199,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH_OF_MAPS);\n    __type (key, __u16);\n    __type (value, __u32);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_MAGLEV_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n    __array (values, struct {__uint (type, BPF_MAP_TYPE_ARRAY); __uint (key_size, sizeof (__u32)); __uint (value_size, sizeof (__u32) * LB_MAGLEV_LUT_SIZE); __uint (max_entries, 1);});\n} LB4_MAGLEV_MAP_OUTER  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:207:216,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, struct lb_affinity_match);\n    __type (value, __u8);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, CILIUM_LB_AFFINITY_MAP_MAX_ENTRIES);\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n} LB_AFFINITY_MATCH_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_lb.h.out:226:234,", "struct arp_eth {\n    unsigned char ar_sha [ETH_ALEN];\n    __be32 ar_sip;\n    unsigned char ar_tha [ETH_ALEN];\n    __be32 ar_tip;\n}  __packed\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_arp.h.out:16:21,", "struct csum_offset {\n    __u16 offset;\n    __u16 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_csum.h.out:16:19,", "struct policy_verdict_notify {\n    NOTIFY_CAPTURE_HDR __u32 remote_label;\n    __s32 verdict;\n    __u16 dst_port;\n    __u8 proto;\n    __u8 dir : 2, ipv6 : 1, match_type : 3, audited : 1, pad0 : 1;\n    __u32 pad1;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_policy_log.h.out:17:24,", "union macaddr {\n    struct {\n        __u32 p1;\n        __u16 p2;\n    }\n    ;\n    __u8 addr [6];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_eth.h.out:20:27,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_ARRAY);\n    __type (key, __u32);\n    __type (value, __u64);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, 1);\n} cilium_ktime_cache  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_time_cache.h.out:12:19,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERF_EVENT_ARRAY);\n    __uint (key_size, sizeof (__u32));\n    __uint (value_size, sizeof (__u32));\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, __NR_CPUS__);\n} EVENTS_MAP  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_events.h.out:8:15,", "struct nat_entry {\n    __u64 created;\n    __u64 host_local;\n    __u64 pad1;\n    __u64 pad2;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:35:40,", "struct ipv4_nat_entry {\n    struct nat_entry common;\n    union {\n        struct {\n            __be32 to_saddr;\n            __be16 to_sport;\n        }\n        ;\n        struct {\n            __be32 to_daddr;\n            __be16 to_dport;\n        }\n        ;\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:104:119,", "struct ipv4_nat_target {\n    __be32 addr;\n    const __u16 min_port;\n    const __u16 max_port;\n    bool src_from_world;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:124:129,", "struct {\n    __uint (type, NAT_MAP_TYPE);\n    __type (key, struct ipv4_ct_tuple);\n    __type (value, struct ipv4_nat_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, SNAT_MAPPING_IPV4_SIZE);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} SNAT_MAPPING_IPV4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:136:148,", "struct {\n    __uint (type, BPF_MAP_TYPE_LPM_TRIE);\n    __type (key, struct lpm_v4_key);\n    __type (value, struct lpm_val);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, 16384);\n    __uint (map_flags, BPF_F_NO_PREALLOC);\n} IP_MASQ_AGENT_IPV4  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:154:162,", "struct ipv6_nat_entry {\n    struct nat_entry common;\n    union {\n        struct {\n            union v6addr to_saddr;\n            __be16 to_sport;\n        }\n        ;\n        struct {\n            union v6addr to_daddr;\n            __be16 to_dport;\n        }\n        ;\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:522:537,", "struct ipv6_nat_target {\n    union v6addr addr;\n    const __u16 min_port;\n    const __u16 max_port;\n    bool src_from_world;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:542:547,", "struct {\n    __uint (type, NAT_MAP_TYPE);\n    __type (key, struct ipv6_ct_tuple);\n    __type (value, struct ipv6_nat_entry);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, SNAT_MAPPING_IPV6_SIZE);\n\n#ifndef HAVE_LRU_HASH_MAP_TYPE\n    __uint (map_flags, CONDITIONAL_PREALLOC);\n\n#endif\n} SNAT_MAPPING_IPV6  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_lib_nat.h.out:554:566,", "struct {\n    __uint (type, BPF_MAP_TYPE_HASH);\n    __type (key, __u32);\n    __type (value, __u64);\n    __uint (max_entries, 1024);\n} bytecount_map  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_custom_bytecount.h.out:2:8,", "struct in_addr {\n    __be32 s_addr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_in.h.out:84:86,", "struct icmp6hdr {\n    __u8 icmp6_type;\n    __u8 icmp6_code;\n    __sum16 icmp6_cksum;\n    union {\n        __be32 un_data32 [1];\n        __be16 un_data16 [2];\n        __u8 un_data8 [4];\n        struct icmpv6_echo {\n            __be16 identifier;\n            __be16 sequence;\n        } u_echo;\n\n        struct icmpv6_nd_advt {\n\n#if defined(__LITTLE_ENDIAN_BITFIELD)\n            __u32 reserved : 5, override : 1, solicited : 1, router : 1, reserved2 : 24;\n\n#elif defined(__BIG_ENDIAN_BITFIELD)\n            __u32 router : 1, solicited : 1, override : 1, reserved : 29;\n\n#else\n\n#error\t\"Please fix <asm/byteorder.h>\"\n\n#endif\t\t\t\t\t\t\n        } u_nd_advt;\n\n        struct icmpv6_nd_ra {\n            __u8 hop_limit;\n\n#if defined(__LITTLE_ENDIAN_BITFIELD)\n            __u8 reserved : 3, router_pref : 2, home_agent : 1, other : 1, managed : 1;\n\n#elif defined(__BIG_ENDIAN_BITFIELD)\n            __u8 managed : 1, other : 1, home_agent : 1, router_pref : 2, reserved : 3;\n\n#else\n\n#error\t\"Please fix <asm/byteorder.h>\"\n\n#endif\n            __be16 rt_lifetime;\n        } u_nd_ra;\n\n    } icmp6_dataun;\n\n#define icmp6_identifier\ticmp6_dataun.u_echo.identifier\n\n#define icmp6_sequence\t\ticmp6_dataun.u_echo.sequence\n\n#define icmp6_pointer\t\ticmp6_dataun.un_data32[0]\n\n#define icmp6_mtu\t\ticmp6_dataun.un_data32[0]\n\n#define icmp6_unused\t\ticmp6_dataun.un_data32[0]\n\n#define icmp6_maxdelay\t\ticmp6_dataun.un_data16[0]\n\n#define icmp6_router\t\ticmp6_dataun.u_nd_advt.router\n\n#define icmp6_solicited\t\ticmp6_dataun.u_nd_advt.solicited\n\n#define icmp6_override\t\ticmp6_dataun.u_nd_advt.override\n\n#define icmp6_ndiscreserved\ticmp6_dataun.u_nd_advt.reserved\n\n#define icmp6_hop_limit\t\ticmp6_dataun.u_nd_ra.hop_limit\n\n#define icmp6_addrconf_managed\ticmp6_dataun.u_nd_ra.managed\n\n#define icmp6_addrconf_other\ticmp6_dataun.u_nd_ra.other\n\n#define icmp6_rt_lifetime\ticmp6_dataun.u_nd_ra.rt_lifetime\n\n#define icmp6_router_pref\ticmp6_dataun.u_nd_ra.router_pref\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_icmpv6.h.out:10:86,", "struct icmp6_filter {\n    __u32 data [8];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_icmpv6.h.out:167:169,", "struct in6_addr {\n    union {\n        __u8 u6_addr8 [16];\n        __be16 u6_addr16 [8];\n        __be32 u6_addr32 [4];\n    } in6_u;\n\n#define s6_addr\t\t\tin6_u.u6_addr8\n\n#define s6_addr16\t\tin6_u.u6_addr16\n\n#define s6_addr32\t\tin6_u.u6_addr32\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_in6.h.out:8:20,", "struct icmphdr {\n    __u8 type;\n    __u8 code;\n    __sum16 checksum;\n    union {\n        struct {\n            __be16 id;\n            __be16 sequence;\n        } echo;\n\n        __be32 gateway;\n        struct {\n            __be16 __unused;\n            __be16 mtu;\n        } frag;\n\n    } un;\n\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_icmp.h.out:82:100,", "struct icmp_filter {\n    __u32 data;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_icmp.h.out:107:109,", "struct iphdr {\n\n#if defined(__LITTLE_ENDIAN_BITFIELD)\n    __u8 ihl : 4, version : 4;\n\n#elif defined (__BIG_ENDIAN_BITFIELD)\n    __u8 version : 4, ihl : 4;\n\n#else\n\n#error\t\"Please fix <asm/byteorder.h>\"\n\n#endif\n    __u8 tos;\n    __be16 tot_len;\n    __be16 id;\n    __be16 frag_off;\n    __u8 ttl;\n    __u8 protocol;\n    __sum16 check;\n    __be32 saddr;\n    __be32 daddr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ip.h.out:112:134,", "struct ip_auth_hdr {\n    __u8 nexthdr;\n    __u8 hdrlen;\n    __be16 reserved;\n    __be32 spi;\n    __be32 seq_no;\n    __u8 auth_data [0];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ip.h.out:139:146,", "struct ip_esp_hdr {\n    __be32 spi;\n    __be32 seq_no;\n    __u8 enc_data [0];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ip.h.out:151:155,", "struct ip_comp_hdr {\n    __u8 nexthdr;\n    __u8 flags;\n    __be16 cpi;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ip.h.out:160:164,", "struct ip_beet_phdr {\n    __u8 nexthdr;\n    __u8 hdrlen;\n    __u8 padlen;\n    __u8 reserved;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ip.h.out:169:174,", "struct ipv6_rt_hdr {\n    __u8 nexthdr;\n    __u8 hdrlen;\n    __u8 type;\n    __u8 segments_left;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:18:23,", "struct ipv6_opt_hdr {\n    __u8 nexthdr;\n    __u8 hdrlen;\n}  __attribute__ ((packed))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:28:31,", "struct rt0_hdr {\n    struct ipv6_rt_hdr rt_hdr;\n    __u32 reserved;\n    struct in6_addr addr [0];\n\n#define rt0_type\t\trt_hdr.type\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:42:48,", "struct rt2_hdr {\n    struct ipv6_rt_hdr rt_hdr;\n    __u32 reserved;\n    struct in6_addr addr;\n\n#define rt2_type\t\trt_hdr.type\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:53:59,", "struct ipv6_destopt_hao {\n    __u8 type;\n    __u8 length;\n    struct in6_addr addr;\n}  __attribute__ ((packed))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:64:68,", "struct ipv6hdr {\n\n#if defined(__LITTLE_ENDIAN_BITFIELD)\n    __u8 priority : 4, version : 4;\n\n#elif defined(__BIG_ENDIAN_BITFIELD)\n    __u8 version : 4, priority : 4;\n\n#else\n\n#error\t\"Please fix <asm/byteorder.h>\"\n\n#endif\n    __u8 flow_lbl [3];\n    __be16 payload_len;\n    __u8 nexthdr;\n    __u8 hop_limit;\n    struct in6_addr saddr;\n    struct in6_addr daddr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_ipv6.h.out:73:92,", "struct ethhdr {\n    unsigned char h_dest [ETH_ALEN];\n    unsigned char h_source [ETH_ALEN];\n    __be16 h_proto;\n}  __attribute__ ((packed))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_if_ether.h.out:186:190,", "struct bpf_insn {\n    __u8 code;\n    __u8 dst_reg : 4;\n    __u8 src_reg : 4;\n    __s16 off;\n    __s32 imm;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:54:60,", "struct bpf_lpm_trie_key {\n    __u32 prefixlen;\n    __u8 data [0];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:65:68,", "struct bpf_cgroup_storage_key {\n    __u64 cgroup_inode_id;\n    __u32 attach_type;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:73:76,", "union bpf_iter_link_info {\n    struct {\n        __u32 map_fd;\n    } map;\n\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:81:86,", "struct bpf_stack_build_id {\n    __s32 status;\n    unsigned char build_id [BPF_BUILD_ID_SIZE];\n    union {\n        __u64 offset;\n        __u64 ip;\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:160:168,", "union bpf_attr {\n    struct {\n        __u32 map_type;\n        __u32 key_size;\n        __u32 value_size;\n        __u32 max_entries;\n        __u32 map_flags;\n        __u32 inner_map_fd;\n        __u32 numa_node;\n        char map_name [BPF_OBJ_NAME_LEN];\n        __u32 map_ifindex;\n        __u32 btf_fd;\n        __u32 btf_key_type_id;\n        __u32 btf_value_type_id;\n        __u32 btf_vmlinux_value_type_id;\n    }\n    ;\n    struct {\n        __u32 map_fd;\n        __aligned_u64 key;\n        union {\n            __aligned_u64 value;\n            __aligned_u64 next_key;\n        }\n        ;\n        __u64 flags;\n    }\n    ;\n    struct {\n        __aligned_u64 in_batch;\n        __aligned_u64 out_batch;\n        __aligned_u64 keys;\n        __aligned_u64 values;\n        __u32 count;\n        __u32 map_fd;\n        __u64 elem_flags;\n        __u64 flags;\n    } batch;\n\n    struct {\n        __u32 prog_type;\n        __u32 insn_cnt;\n        __aligned_u64 insns;\n        __aligned_u64 license;\n        __u32 log_level;\n        __u32 log_size;\n        __aligned_u64 log_buf;\n        __u32 kern_version;\n        __u32 prog_flags;\n        char prog_name [BPF_OBJ_NAME_LEN];\n        __u32 prog_ifindex;\n        __u32 expected_attach_type;\n        __u32 prog_btf_fd;\n        __u32 func_info_rec_size;\n        __aligned_u64 func_info;\n        __u32 func_info_cnt;\n        __u32 line_info_rec_size;\n        __aligned_u64 line_info;\n        __u32 line_info_cnt;\n        __u32 attach_btf_id;\n        union {\n            __u32 attach_prog_fd;\n            __u32 attach_btf_obj_fd;\n        }\n        ;\n    }\n    ;\n    struct {\n        __aligned_u64 pathname;\n        __u32 bpf_fd;\n        __u32 file_flags;\n    }\n    ;\n    struct {\n        __u32 target_fd;\n        __u32 attach_bpf_fd;\n        __u32 attach_type;\n        __u32 attach_flags;\n        __u32 replace_bpf_fd;\n    }\n    ;\n    struct {\n        __u32 prog_fd;\n        __u32 retval;\n        __u32 data_size_in;\n        __u32 data_size_out;\n        __aligned_u64 data_in;\n        __aligned_u64 data_out;\n        __u32 repeat;\n        __u32 duration;\n        __u32 ctx_size_in;\n        __u32 ctx_size_out;\n        __aligned_u64 ctx_in;\n        __aligned_u64 ctx_out;\n        __u32 flags;\n        __u32 cpu;\n    } test;\n\n    struct {\n        union {\n            __u32 start_id;\n            __u32 prog_id;\n            __u32 map_id;\n            __u32 btf_id;\n            __u32 link_id;\n        }\n        ;\n        __u32 next_id;\n        __u32 open_flags;\n    }\n    ;\n    struct {\n        __u32 bpf_fd;\n        __u32 info_len;\n        __aligned_u64 info;\n    } info;\n\n    struct {\n        __u32 target_fd;\n        __u32 attach_type;\n        __u32 query_flags;\n        __u32 attach_flags;\n        __aligned_u64 prog_ids;\n        __u32 prog_cnt;\n    } query;\n\n    struct {\n        __u64 name;\n        __u32 prog_fd;\n    } raw_tracepoint;\n\n    struct {\n        __aligned_u64 btf;\n        __aligned_u64 btf_log_buf;\n        __u32 btf_size;\n        __u32 btf_log_size;\n        __u32 btf_log_level;\n    }\n    ;\n    struct {\n        __u32 pid;\n        __u32 fd;\n        __u32 flags;\n        __u32 buf_len;\n        __aligned_u64 buf;\n        __u32 prog_id;\n        __u32 fd_type;\n        __u64 probe_offset;\n        __u64 probe_addr;\n    } task_fd_query;\n\n    struct {\n        __u32 prog_fd;\n        union {\n            __u32 target_fd;\n            __u32 target_ifindex;\n        }\n        ;\n        __u32 attach_type;\n        __u32 flags;\n        union {\n            __u32 target_btf_id;\n            struct {\n                __aligned_u64 iter_info;\n                __u32 iter_info_len;\n            }\n            ;\n        }\n        ;\n    } link_create;\n\n    struct {\n        __u32 link_fd;\n        __u32 new_prog_fd;\n        __u32 flags;\n        __u32 old_prog_fd;\n    } link_update;\n\n    struct {\n        __u32 link_fd;\n    } link_detach;\n\n    struct {\n        __u32 type;\n    } enable_stats;\n\n    struct {\n        __u32 link_fd;\n        __u32 flags;\n    } iter_create;\n\n    struct {\n        __u32 prog_fd;\n        __u32 map_fd;\n        __u32 flags;\n    } prog_bind_map;\n\n}  __attribute__ ((aligned (8)))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:175:372,", "struct  __sk_buff {\n    __u32 len;\n    __u32 pkt_type;\n    __u32 mark;\n    __u32 queue_mapping;\n    __u32 protocol;\n    __u32 vlan_present;\n    __u32 vlan_tci;\n    __u32 vlan_proto;\n    __u32 priority;\n    __u32 ingress_ifindex;\n    __u32 ifindex;\n    __u32 tc_index;\n    __u32 cb [5];\n    __u32 hash;\n    __u32 tc_classid;\n    __u32 data;\n    __u32 data_end;\n    __u32 napi_id;\n    __u32 family;\n    __u32 remote_ip4;\n    __u32 local_ip4;\n    __u32 remote_ip6 [4];\n    __u32 local_ip6 [4];\n    __u32 remote_port;\n    __u32 local_port;\n    __u32 data_meta;\n    __bpf_md_ptr (struct bpf_flow_keys *, flow_keys);\n    __u64 tstamp;\n    __u32 wire_len;\n    __u32 gso_segs;\n    __bpf_md_ptr (struct bpf_sock *, sk);\n    __u32 gso_size;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:627:660,", "struct bpf_tunnel_key {\n    __u32 tunnel_id;\n    union {\n        __u32 remote_ipv4;\n        __u32 remote_ipv6 [4];\n    }\n    ;\n    __u8 tunnel_tos;\n    __u8 tunnel_ttl;\n    __u16 tunnel_ext;\n    __u32 tunnel_label;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:665:676,", "struct bpf_xfrm_state {\n    __u32 reqid;\n    __u32 spi;\n    __u16 family;\n    __u16 ext;\n    union {\n        __u32 remote_ipv4;\n        __u32 remote_ipv6 [4];\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:681:691,", "struct bpf_sock {\n    __u32 bound_dev_if;\n    __u32 family;\n    __u32 type;\n    __u32 protocol;\n    __u32 mark;\n    __u32 priority;\n    __u32 src_ip4;\n    __u32 src_ip6 [4];\n    __u32 src_port;\n    __u32 dst_port;\n    __u32 dst_ip4;\n    __u32 dst_ip6 [4];\n    __u32 state;\n    __s32 rx_queue_mapping;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:701:716,", "struct bpf_tcp_sock {\n    __u32 snd_cwnd;\n    __u32 srtt_us;\n    __u32 rtt_min;\n    __u32 snd_ssthresh;\n    __u32 rcv_nxt;\n    __u32 snd_nxt;\n    __u32 snd_una;\n    __u32 mss_cache;\n    __u32 ecn_flags;\n    __u32 rate_delivered;\n    __u32 rate_interval_us;\n    __u32 packets_out;\n    __u32 retrans_out;\n    __u32 total_retrans;\n    __u32 segs_in;\n    __u32 data_segs_in;\n    __u32 segs_out;\n    __u32 data_segs_out;\n    __u32 lost_out;\n    __u32 sacked_out;\n    __u64 bytes_received;\n    __u64 bytes_acked;\n    __u32 dsack_dups;\n    __u32 delivered;\n    __u32 delivered_ce;\n    __u32 icsk_retransmits;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:721:748,", "struct bpf_sock_tuple {\n    union {\n        struct {\n            __be32 saddr;\n            __be32 daddr;\n            __be16 sport;\n            __be16 dport;\n        } ipv4;\n\n        struct {\n            __be32 saddr [4];\n            __be32 daddr [4];\n            __be16 sport;\n            __be16 dport;\n        } ipv6;\n\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:753:771,", "struct bpf_xdp_sock {\n    __u32 queue_id;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:776:778,", "struct xdp_md {\n    __u32 data;\n    __u32 data_end;\n    __u32 data_meta;\n    __u32 ingress_ifindex;\n    __u32 rx_queue_index;\n    __u32 egress_ifindex;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:787:794,", "struct bpf_devmap_val {\n    __u32 ifindex;\n    union {\n        int fd;\n        __u32 id;\n    } bpf_prog;\n\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:799:806,", "struct bpf_cpumap_val {\n    __u32 qsize;\n    union {\n        int fd;\n        __u32 id;\n    } bpf_prog;\n\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:811:818,", "struct sk_msg_md {\n    __bpf_md_ptr (void *, data);\n    __bpf_md_ptr (void *, data_end);\n    __u32 family;\n    __u32 remote_ip4;\n    __u32 local_ip4;\n    __u32 remote_ip6 [4];\n    __u32 local_ip6 [4];\n    __u32 remote_port;\n    __u32 local_port;\n    __u32 size;\n    __bpf_md_ptr (struct bpf_sock *, sk);\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:825:837,", "struct sk_reuseport_md {\n    __bpf_md_ptr (void *, data);\n    __bpf_md_ptr (void *, data_end);\n    __u32 len;\n    __u32 eth_protocol;\n    __u32 ip_protocol;\n    __u32 bind_inany;\n    __u32 hash;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:842:850,", "struct bpf_prog_info {\n    __u32 type;\n    __u32 id;\n    __u8 tag [BPF_TAG_SIZE];\n    __u32 jited_prog_len;\n    __u32 xlated_prog_len;\n    __aligned_u64 jited_prog_insns;\n    __aligned_u64 xlated_prog_insns;\n    __u64 load_time;\n    __u32 created_by_uid;\n    __u32 nr_map_ids;\n    __aligned_u64 map_ids;\n    char name [BPF_OBJ_NAME_LEN];\n    __u32 ifindex;\n    __u32 gpl_compatible : 1;\n    __u32 : 31;\n    __u64 netns_dev;\n    __u64 netns_ino;\n    __u32 nr_jited_ksyms;\n    __u32 nr_jited_func_lens;\n    __aligned_u64 jited_ksyms;\n    __aligned_u64 jited_func_lens;\n    __u32 btf_id;\n    __u32 func_info_rec_size;\n    __aligned_u64 func_info;\n    __u32 nr_func_info;\n    __u32 nr_line_info;\n    __aligned_u64 line_info;\n    __aligned_u64 jited_line_info;\n    __u32 nr_jited_line_info;\n    __u32 line_info_rec_size;\n    __u32 jited_line_info_rec_size;\n    __u32 nr_prog_tags;\n    __aligned_u64 prog_tags;\n    __u64 run_time_ns;\n    __u64 run_cnt;\n}  __attribute__ ((aligned (8)))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:857:893,", "struct bpf_map_info {\n    __u32 type;\n    __u32 id;\n    __u32 key_size;\n    __u32 value_size;\n    __u32 max_entries;\n    __u32 map_flags;\n    char name [BPF_OBJ_NAME_LEN];\n    __u32 ifindex;\n    __u32 btf_vmlinux_value_type_id;\n    __u64 netns_dev;\n    __u64 netns_ino;\n    __u32 btf_id;\n    __u32 btf_key_type_id;\n    __u32 btf_value_type_id;\n}  __attribute__ ((aligned (8)))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:898:913,", "struct bpf_btf_info {\n    __aligned_u64 btf;\n    __u32 btf_size;\n    __u32 id;\n    __aligned_u64 name;\n    __u32 name_len;\n    __u32 kernel_btf;\n}  __attribute__ ((aligned (8)))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:918:925,", "struct bpf_link_info {\n    __u32 type;\n    __u32 id;\n    __u32 prog_id;\n    union {\n        struct {\n            __aligned_u64 tp_name;\n            __u32 tp_name_len;\n        } raw_tracepoint;\n\n        struct {\n            __u32 attach_type;\n        } tracing;\n\n        struct {\n            __u64 cgroup_id;\n            __u32 attach_type;\n        } cgroup;\n\n        struct {\n            __aligned_u64 target_name;\n            __u32 target_name_len;\n            union {\n                struct {\n                    __u32 map_id;\n                } map;\n\n            }\n            ;\n        } iter;\n\n        struct {\n            __u32 netns_ino;\n            __u32 attach_type;\n        } netns;\n\n        struct {\n            __u32 ifindex;\n        } xdp;\n\n    }\n    ;\n}  __attribute__ ((aligned (8)))\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:930:972,", "struct bpf_sock_addr {\n    __u32 user_family;\n    __u32 user_ip4;\n    __u32 user_ip6 [4];\n    __u32 user_port;\n    __u32 family;\n    __u32 type;\n    __u32 protocol;\n    __u32 msg_src_ip4;\n    __u32 msg_src_ip6 [4];\n    __bpf_md_ptr (struct bpf_sock *, sk);\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:977:988,", "struct bpf_sock_ops {\n    __u32 op;\n    union {\n        __u32 args [4];\n        __u32 reply;\n        __u32 replylong [4];\n    }\n    ;\n    __u32 family;\n    __u32 remote_ip4;\n    __u32 local_ip4;\n    __u32 remote_ip6 [4];\n    __u32 local_ip6 [4];\n    __u32 remote_port;\n    __u32 local_port;\n    __u32 is_fullsock;\n    __u32 snd_cwnd;\n    __u32 srtt_us;\n    __u32 bpf_sock_ops_cb_flags;\n    __u32 state;\n    __u32 rtt_min;\n    __u32 snd_ssthresh;\n    __u32 rcv_nxt;\n    __u32 snd_nxt;\n    __u32 snd_una;\n    __u32 mss_cache;\n    __u32 ecn_flags;\n    __u32 rate_delivered;\n    __u32 rate_interval_us;\n    __u32 packets_out;\n    __u32 retrans_out;\n    __u32 total_retrans;\n    __u32 segs_in;\n    __u32 data_segs_in;\n    __u32 segs_out;\n    __u32 data_segs_out;\n    __u32 lost_out;\n    __u32 sacked_out;\n    __u32 sk_txhash;\n    __u64 bytes_received;\n    __u64 bytes_acked;\n    __bpf_md_ptr (struct bpf_sock *, sk);\n    __bpf_md_ptr (void *, skb_data);\n    __bpf_md_ptr (void *, skb_data_end);\n    __u32 skb_len;\n    __u32 skb_tcp_flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:993:1039,", "struct bpf_perf_event_value {\n    __u64 counter;\n    __u64 enabled;\n    __u64 running;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1069:1073,", "struct bpf_cgroup_dev_ctx {\n    __u32 access_type;\n    __u32 major;\n    __u32 minor;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1085:1089,", "struct bpf_raw_tracepoint_args {\n    __u64 args [0];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1094:1096,", "struct bpf_fib_lookup {\n    __u8 family;\n    __u8 l4_protocol;\n    __be16 sport;\n    __be16 dport;\n    __u16 tot_len;\n    __u32 ifindex;\n    union {\n        __u8 tos;\n        __be32 flowinfo;\n        __u32 rt_metric;\n    }\n    ;\n    union {\n        __be32 ipv4_src;\n        __u32 ipv6_src [4];\n    }\n    ;\n    union {\n        __be32 ipv4_dst;\n        __u32 ipv6_dst [4];\n    }\n    ;\n    __be16 h_vlan_proto;\n    __be16 h_vlan_TCI;\n    __u8 smac [6];\n    __u8 dmac [6];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1105:1132,", "struct bpf_redir_neigh {\n    __u32 nh_family;\n    union {\n        __be32 ipv4_nh;\n        __u32 ipv6_nh [4];\n    }\n    ;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1137:1144,", "struct bpf_flow_keys {\n    __u16 nhoff;\n    __u16 thoff;\n    __u16 addr_proto;\n    __u8 is_frag;\n    __u8 is_first_frag;\n    __u8 is_encap;\n    __u8 ip_proto;\n    __be16 n_proto;\n    __be16 sport;\n    __be16 dport;\n    union {\n        struct {\n            __be32 ipv4_src;\n            __be32 ipv4_dst;\n        }\n        ;\n        struct {\n            __u32 ipv6_src [4];\n            __u32 ipv6_dst [4];\n        }\n        ;\n    }\n    ;\n    __u32 flags;\n    __be32 flow_label;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1154:1180,", "struct bpf_func_info {\n    __u32 insn_off;\n    __u32 type_id;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1185:1188,", "struct bpf_line_info {\n    __u32 insn_off;\n    __u32 file_name_off;\n    __u32 line_off;\n    __u32 line_col;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1197:1202,", "struct bpf_spin_lock {\n    __u32 val;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1207:1209,", "struct bpf_sysctl {\n    __u32 write;\n    __u32 file_pos;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1214:1217,", "struct bpf_sockopt {\n    __bpf_md_ptr (struct bpf_sock *, sk);\n    __bpf_md_ptr (void *, optval);\n    __bpf_md_ptr (void *, optval_end);\n    __s32 level;\n    __s32 optname;\n    __s32 optlen;\n    __s32 retval;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1222:1230,", "struct bpf_pidns_info {\n    __u32 pid;\n    __u32 tgid;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1235:1238,", "struct bpf_sk_lookup {\n    __bpf_md_ptr (struct bpf_sock *, sk);\n    __u32 family;\n    __u32 protocol;\n    __u32 remote_ip4;\n    __u32 remote_ip6 [4];\n    __u32 remote_port;\n    __u32 local_ip4;\n    __u32 local_ip6 [4];\n    __u32 local_port;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1243:1253,", "struct btf_ptr {\n    void *ptr;\n    __u32 type_id;\n    __u32 flags;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_bpf.h.out:1258:1262,", "struct arphdr {\n    __be16 ar_hrd;\n    __be16 ar_pro;\n    unsigned char ar_hln;\n    unsigned char ar_pln;\n    __be16 ar_op;\n\n#if 0\n    unsigned char ar_sha [ETH_ALEN];\n    unsigned char ar_sip [4];\n    unsigned char ar_tha [ETH_ALEN];\n    unsigned char ar_tip [4];\n\n#endif\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_if_arp.h.out:152:166,", "struct udphdr {\n    __be16 source;\n    __be16 dest;\n    __be16 len;\n    __sum16 check;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_udp.h.out:8:13,", "struct tcphdr {\n    __be16 source;\n    __be16 dest;\n    __be32 seq;\n    __be32 ack_seq;\n\n#if defined(__LITTLE_ENDIAN_BITFIELD)\n    __u16 res1 : 4, doff : 4, fin : 1, syn : 1, rst : 1, psh : 1, ack : 1, urg : 1, ece : 1, cwr : 1;\n\n#elif defined(__BIG_ENDIAN_BITFIELD)\n    __u16 doff : 4, res1 : 4, cwr : 1, ece : 1, urg : 1, ack : 1, psh : 1, rst : 1, syn : 1, fin : 1;\n\n#else\n\n#error\t\"Adjust your <asm/byteorder.h> defines\"\n\n#endif\t\n    __be16 window;\n    __sum16 check;\n    __be16 urg_ptr;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_tcp.h.out:8:28,", "union tcp_word_hdr {\n    struct tcphdr hdr;\n    __be32 words [5];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_linux_tcp.h.out:33:36,", "struct bpf_elf_map {\n    __u32 type;\n    __u32 size_key;\n    __u32 size_value;\n    __u32 max_elem;\n    __u32 flags;\n    __u32 id;\n    __u32 pinning;\n    __u32 inner_id;\n    __u32 inner_idx;\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_bpf_loader.h.out:22:32,", "struct bpf_fib_lookup_padded {\n    struct bpf_fib_lookup l;\n    __u8 pad [2];\n}\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_bpf_helpers.h.out:59:62,", "struct {\n    __uint (type, BPF_MAP_TYPE_PERCPU_ARRAY);\n    __uint (key_size, sizeof (int));\n    __uint (value_size, META_PIVOT);\n    __uint (pinning, LIBBPF_PIN_BY_NAME);\n    __uint (max_entries, 1);\n} cilium_xdp_scratch  __section_maps_btf;\n\n": "/home/palani/github/opened_extraction/txl_cilium/annotate_struct_examples_cilium_include_bpf_ctx_xdp.h.out:298:305,"}